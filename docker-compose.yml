version: '3'

networks:
    frontend:
        driver: ${NETWORKS_DRIVER}
    backend:
        driver: ${NETWORKS_DRIVER}

volumes:
    mysql:
        driver: ${VOLUMES_DRIVER}
    redis:
        driver: ${VOLUMES_DRIVER}
    neo4j:
        driver: ${VOLUMES_DRIVER}
    mariadb:
        driver: ${VOLUMES_DRIVER}
    mongo:
        driver: ${VOLUMES_DRIVER}
    elasticsearch:
        driver: ${VOLUMES_DRIVER}

services:

### Workspace Utilities ##################################
    workspace:
        build:
            context: ./workspace
            args:
              - LARADOCK_PHP_VERSION=${PHP_VERSION}
              - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
              - INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}
              - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
              - INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}
              - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
              - INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}
              - INSTALL_GMP=${WORKSPACE_INSTALL_GMP}
              - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
              - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
              - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
              - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
              - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}
              - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
              - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
              - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
              - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
              - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
              - INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}
              - INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}
              - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
              - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
              - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
              - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
              - AEROSPIKE_PHP_REPOSITORY=${AEROSPIKE_PHP_REPOSITORY}
              - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
              - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
              - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
              - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
              - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
              - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
              - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
              - INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}
              - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
              - INSTALL_MC=${WORKSPACE_INSTALL_MC}
              - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
              - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
              - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
              - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
              - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
              - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
              - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
              - INSTALL_PHALCON=${WORKSPACE_INSTALL_PHALCON}
              - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
              - INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}
              - INSTALL_IONCUBE=${WORKSPACE_INSTALL_IONCUBE}
              - PUID=${WORKSPACE_PUID}
              - PGID=${WORKSPACE_PGID}
              - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
              - NODE_VERSION=${WORKSPACE_NODE_VERSION}
              - YARN_VERSION=${WORKSPACE_YARN_VERSION}
              - DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}
              - TZ=${WORKSPACE_TIMEZONE}
              - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
              - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
            - "local.api.com:${DOCKER_HOST_IP}"
            - "local.wow.com:${DOCKER_HOST_IP}"
            - "local.admin.com:${DOCKER_HOST_IP}"
        ports:
            - "${WORKSPACE_SSH_PORT}:22"
        tty: true
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        networks:
            - frontend
            - backend

### PHP-FPM ##############################################
    php-fpm:
        build:
            context: ./php-fpm
            args:
                - LARADOCK_PHP_VERSION=${PHP_VERSION}
                - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
                - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
                - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
                - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
                - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
                - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
                - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
                - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
                - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
                - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
                - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
                - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
                - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
                - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
                - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
                - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
                - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
                - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
                - AEROSPIKE_PHP_REPOSITORY=${AEROSPIKE_PHP_REPOSITORY}
                - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
                - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
                - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
                - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
                - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
                - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
                - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
                - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
                - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
                - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
                - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
                - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
                - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
                - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        volumes:
            - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        expose:
            - "9000"
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
            - "local.api.com:${DOCKER_HOST_IP}"
            - "local.wow.com:${DOCKER_HOST_IP}"
            - "local.admin.com:${DOCKER_HOST_IP}"
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
            - FAKETIME=${PHP_FPM_FAKETIME}
        networks:
            - backend

### VERSION-5 PHP-FPM Container #######################################

    php5-fpm:
        build:
            context: ./php-fpm
            args:
                - LARADOCK_PHP_VERSION=5.6
                - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
                - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
                - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
                - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
                - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
                - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
                - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
                - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
                - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
                - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
                - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
                - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
                - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
                - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
                - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
                - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
                - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
                - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
                - AEROSPIKE_PHP_REPOSITORY=${AEROSPIKE_PHP_REPOSITORY}
                - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
                - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
                - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
                - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
                - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
                - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
                - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
                - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
                - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
                - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
                - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
                - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
                - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
                - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        volumes:
            - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        expose:
            - "9000"
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
            - "local.api.com:${DOCKER_HOST_IP}"
            - "local.wow.com:${DOCKER_HOST_IP}"
            - "local.admin.com:${DOCKER_HOST_IP}"
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
            - FAKETIME=${PHP_FPM_FAKETIME}
        networks:
            - backend

### PHP Worker Container #####################################
    php-worker:
        build:
            context: ./php-worker
            args:
                - PHP_VERSION=${PHP_VERSION}
                - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
            - ./php-worker/supervisord.d:/etc/supervisord.d
        depends_on:
            - workspace
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
            - "local.api.com:${DOCKER_HOST_IP}"
            - "local.wow.com:${DOCKER_HOST_IP}"
            - "local.admin.com:${DOCKER_HOST_IP}"
        networks:
            - backend

### NGINX Server #########################################
    nginx:
        build:
            context: ./nginx
            args:
                - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
                - PHP5_UPSTREAM_CONTAINER=${NGINX_PHP5_UPSTREAM_CONTAINER}
                - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        depends_on:
            - php-fpm
            - php5-fpm
        networks:
            - frontend
            - backend

### MySQL Container #########################################
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MYSQL_PORT}:3306"
        networks:
            - backend

### MariaDB ##############################################
    mariadb:
        build: ./mariadb
        volumes:
            - ${DATA_PATH_HOST}/mariadb:/var/lib/mysql
            - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MARIADB_PORT}:3306"
        environment:
            - MYSQL_DATABASE=${MARIADB_DATABASE}
            - MYSQL_USER=${MARIADB_USER}
            - MYSQL_PASSWORD=${MARIADB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
        networks:
            - backend

### MongoDB ##############################################
    mongo:
        build: ./mongo
        ports:
            - "${MONGODB_PORT}:27017"
        volumes:
            - ${DATA_PATH_HOST}/mongo:/data/db
        networks:
            - backend

### Redis ################################################
    redis:
        build: ./redis
        volumes:
            - ${DATA_PATH_HOST}/redis:/data
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - backend

### Beanstalkd ###########################################
    beanstalkd:
        build: ./beanstalkd
        ports:
            - "${BEANSTALKD_HOST_PORT}:11300"
        privileged: true
        depends_on:
            - php-fpm
        networks:
            - backend

### RabbitMQ #############################################
    rabbitmq:
        build: ./rabbitmq
        ports:
            - "${RABBITMQ_NODE_HOST_PORT}:5672"
            - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
            - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
        privileged: true
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
        depends_on:
            - php-fpm
        networks:
            - backend

### ElasticSearch ########################################
    elasticsearch:
        build: ./elasticsearch
        volumes:
            - elasticsearch:/usr/share/elasticsearch/data
        environment:
            - cluster.name=laradock-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - xpack.monitoring.enabled=false
            - xpack.security.enabled=false
            - transport.host=localhost
        ulimits:
            memlock:
              soft: -1
              hard: -1
        ports:
            - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
            - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
        depends_on:
            - php-fpm
        networks:
            - frontend
            - backend

### Kibana ##############################################
    kibana:
        build: ./kibana
        ports:
            - "${KIBANA_HTTP_PORT}:5601"
        volumes:
          - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
        depends_on:
            - elasticsearch
        networks:
            - frontend
            - backend

### Zookeeper ##############################################
    zookeeper:
        build: ./zookeeper
        ports:
            - "${ZOOKEEPER_HTTP_PORT}:2181"
        networks:
            - backend


### Kafka ##############################################
    kafka:
        build: ./kafka
        ports:
            - "${KAFKA_HTTP_PORT}:9092"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
              KAFKA_ADVERTISED_HOST_NAME: kafka
              KAFKA_CREATE_TOPICS: "test:1:2"
              KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
              KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
              KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
        depends_on:
            - zookeeper
        networks:
            - backend

### Zkui ##############################################
    zkui:
        build: ./zkui
        ports:
            - "9090:9090"
        depends_on:
            - zookeeper
            - kafka
        networks:
            - frontend
            - backend

### Canal ##############################################
    canal:
        build: ./canal
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        ports:
            - "11111:11111"
        depends_on:
            - zookeeper
            - kafka
        tty: true
        networks:
            - frontend
            - backend




